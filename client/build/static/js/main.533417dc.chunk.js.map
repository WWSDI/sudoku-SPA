{"version":3,"sources":["components/Footer.tsx","lib/makeBd.ts","components/Cell.tsx","util/util.ts","components/Board.tsx","util/sudokuValidator.ts","lib/localStorage.ts","components/GameController.tsx","components/Button.tsx","components/Numpad.tsx","components/Game.tsx","components/Tips.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Footer","className","target","rel","href","src","alt","height","aria-hidden","viewBox","version","width","data-view-component","fill-rule","d","makeCell","v","i","type","error","conflict","makeBd","puzzle","map","Cell","cell","id","String","padStart","idxToij","idx","Math","floor","getSudokuIndices","j","blcIStart","blcJStart","Array","from","length","_","filter","m","n","idToIndex","parseInt","substr","Board","bd","ac","bdDispatch","setAc","setWon","keypress","setKeypress","won","useState","sudoku","setSudoku","hlAC","AC","document","querySelector","classList","add","didIWin","solution2D","solution1D","push","get2DSolutionFromBd","console","log","result","board","source","sameNumArr1_9","testArr","slice","sort","every","el","board_cols","forEach","row","arr","col","board_blocks","block","test","validateSolution","useEffect","allCells","querySelectorAll","getSudoku","remove","ACVal","cellIdx","cellVal","hlSameNum","localStorage","setItem","JSON","stringify","onClick","e","Number","fetchPuzzles","a","process","API_URL","fetch","response","ok","json","puzzles","alert","storeFetchedPuzzles","difficulty","GameController","setPuzzle","setSolution","setDifficulty","htmlFor","name","value","onChange","data","getItem","undefined","setTimeout","localPuzzles","parse","pop","newPuzzle","newSolution","solution","payload","Button","Numpad","numVal","num","initPuzzle","initSolution","Game","useReducer","action","newBd1","nonZeroSudoku","conflicts","sameValueCells","idx2","isConflict","newBd2","Error","Tips","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.533417dc.chunk.js","sourcesContent":["export const Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p>\n        Developed by <strong>Shawn Su</strong>\n      </p>\n      <p>Launched on 4 Nov 2021</p>\n      <p>\n        Studying at {\"\"}\n        <a target=\"_blank\" rel='noreferrer' href=\"https://www.developers.ac.nz/\">Developers Institute</a>\n      </p>\n      <div className=\"logo-container\">\n        <a target=\"_blank\" rel='noreferrer' href=\"https://www.linkedin.com/in/shawn-su-78a654215/\">\n          <img src=\"https://content.linkedin.com/content/dam/me/business/en-us/amp/brand-site/v2/bg/LI-Bug.svg.original.svg\" alt=\"Linkedin logo\"/>\n        </a>\n        <a target=\"_blank\" rel='noreferrer' href=\"https://github.com/WWSDI\">\n          <svg\n            height=\"64\"\n            aria-hidden=\"true\"\n            viewBox=\"0 0 16 16\"\n            version=\"1.1\"\n            width=\"64\"\n            data-view-component=\"true\"\n            className=\"octicon octicon-mark-github v-align-middle\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\n            ></path>\n          </svg>\n        </a>\n      </div>\n    </div>\n  );\n};\n","import { CellType } from \"./types\";\n\nconst makeCell = (v: number, i: number): CellType => ({\n  v,\n  i,\n  type: v !== 0 ? \"auto\" : \"user\",\n  error: false,\n  conflict: false,\n});\nconst makeBd = (puzzle: number[]) => puzzle.map(makeCell);\n\nexport default makeBd;\n","import { CellType } from \"../lib/types\";\nimport \"./Cell.css\";\n\ninterface CellProps {\n  cell: CellType;\n}\n\n// interface DivProps {\n//   i?: number;\n// }\n\nexport default function Cell({ cell: { v, i, type, error } }: CellProps) {\n  return (\n    // <div className={v ? \"Cell\" : \"Cell empty-Cell\"} i={i}>\n    <div\n      className={type === \"auto\" ? \"Cell auto\" : \"Cell user\"}\n      id={\"C\" + String(i).padStart(2, \"0\")}\n    >\n      {v ? v : \"\"}\n    </div>\n  );\n}\n","import { CellType } from \"./../lib/types\";\nimport { BdType } from \"../lib/types\";\nimport Cell from \"../components/Cell\";\nimport validateSolution from \"./sudokuValidator\";\n\n// ⭐️ convert index to [i,j]\nexport const idxToij = (idx: number): [number, number] => [\n  Math.floor(idx / 9),\n  idx % 9,\n];\nexport const getSudoku = (idx: number) => {\n  // ❗️ This part can be optimised by using a lookup obj instead of calculating every time\n  const [i, j] = idxToij(idx);\n  const blcIStart = Math.floor(i / 3) * 3;\n  const blcJStart = Math.floor(j / 3) * 3;\n  const allCells = document.querySelectorAll(\".Cell\");\n  const sudoku = Array.from(allCells).filter((cell) => {\n    // console.log(\"CELL:\", cell);\n    const idx = idToIndex((cell as HTMLDivElement).id);\n    const [m, n] = idxToij(idx);\n\n    return (\n      m === i ||\n      n === j ||\n      (m >= blcIStart &&\n        m < blcIStart + 3 &&\n        n >= blcJStart &&\n        n < blcJStart + 3)\n    );\n  });\n  return sudoku;\n};\nexport const getSudokuIndices = (idx: number) => {\n  // ❗️ This part can be optimised by using a lookup obj instead of calculating every time\n  const [i, j] = idxToij(idx);\n  const blcIStart = Math.floor(i / 3) * 3;\n  const blcJStart = Math.floor(j / 3) * 3;\n\n  const sudoku = Array.from({ length: 81 }, (_, i) => i).filter((idx) => {\n    // console.log(\"CELL:\", cell);\n    const [m, n] = idxToij(idx);\n\n    return (\n      m === i ||\n      n === j ||\n      (m >= blcIStart &&\n        m < blcIStart + 3 &&\n        n >= blcJStart &&\n        n < blcJStart + 3)\n    );\n  });\n  return sudoku;\n};\n\n// Formatting\nexport const indexToSelector = (index: number) =>\n  \"#C\" + String(index).padStart(2, \"0\");\n\nexport const idToIndex = (id: string) => parseInt(id.substr(1));\n\nexport const get2DSolutionFromBd = (bd: BdType) => {\n  const solution1D = bd.map((cell: CellType) => cell.v);\n  const solution2D: number[][] = Array.from({ length: 9 }, () => []);\n\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      solution2D[i].push(solution1D[i * 9 + j]);\n    }\n  }\n  return solution2D;\n};\n","import Cell from \"./Cell\";\nimport \"./Board.css\";\nimport { CellType, BdType, BoardProps } from \"../lib/types\";\nimport { useEffect, useState } from \"react\";\nimport {\n  get2DSolutionFromBd,\n  getSudoku,\n  idToIndex,\n  idxToij,\n  indexToSelector,\n} from \"../util/util\";\nimport makeBd from \"../lib/makeBd\";\nimport validateSolution from \"../util/sudokuValidator\";\n\n// Highlighting\n\nexport default function Board({\n  bd,\n  bdDispatch,\n  ac,\n  setAc,\n  keypress,\n  setKeypress,\n  won,\n  setWon,\n  puzzle,\n}: BoardProps): JSX.Element {\n  const [sudoku, setSudoku] = useState<Element[]>([]);\n\n  const getSudokuVals = (sudoku: Element[]) => {\n    const sudokuVals = [];\n    for (let i = 0; i < sudoku.length; i++) {\n      const idx = idToIndex(sudoku[i].id);\n      sudokuVals.push(bd[idx].v);\n    }\n    return sudokuVals;\n  };\n\n  // Remove highlight of sudoku, ac and same num\n  const remove3Hl = () => {\n    const allCells = document.querySelectorAll(\".Cell\");\n    allCells.forEach((cell) => {\n      cell.classList.remove(\"hl-sudoku\", \"hl-ac\", \"hl-same-num\");\n    });\n  };\n  const hlAC = (idx: number) => {\n    const AC = document.querySelector(indexToSelector(idx));\n    AC?.classList.add(\"hl-ac\");\n  };\n  const hlSameNum = (idx: number) => {\n    // Create same num array and sudoku array\n    // const AC = document.querySelector(indexToSelector(idx));\n    const ACVal = bd[idx].v;\n    const allCells = document.querySelectorAll(\".Cell\");\n    const sameNumCells: Element[] = Array.from(allCells).filter((cell) => {\n      // console.log(\"😱\", cell);\n      const cellIdx = idToIndex(cell.id);\n      const cellVal = bd[cellIdx].v;\n      return cellVal !== 0 && cellVal === ACVal;\n    });\n\n    sameNumCells.forEach((cell) => cell.classList.add(\"hl-same-num\"));\n  };\n  const hlSudoku = (idx: number) => {\n    sudoku.forEach((cell) => cell.classList.add(\"hl-sudoku\"));\n  };\n \n  const hlConflict = () => {\n    const allCells = document.querySelectorAll(\".Cell\");\n    allCells.forEach((cell) => {\n      if (bd[idToIndex(cell.id)].conflict) {\n        // highlight conflict cells\n        cell.classList.add(\"hl-conflict\");\n      } else {\n        // do NOT highlight non-conflict cells\n        cell.classList.remove(\"hl-conflict\");\n      }\n    });\n  };\n  const didIWin = () => {\n    // 1. check if all cells are filled\n    // 2. check if all cells' error property are false\n    // for (let cell of bd) {\n    //   if (cell.v === 0 || cell.error === true) return false;\n    // }\n    const solution2D = get2DSolutionFromBd(bd);\n    console.log(\"2D Solution:\", solution2D);\n    const result = validateSolution(solution2D);\n    console.log(\"Result:\", result);\n\n    return result;\n  };\n\n  // 1. update sudoku\n  useEffect(() => {\n    setSudoku(getSudoku(ac.i));\n  }, [ac]);\n\n  // 2. highlight sudoku, ac, same num\n  useEffect(() => {\n    // remove highlight of sudoku, ac and same num\n    remove3Hl();\n    // add new highlight of sudoku, ac and same num\n    hlSudoku(ac.i);\n    hlSameNum(ac.i);\n    hlAC(ac.i);\n  }, [bd, sudoku]); // ignore the dependency warning\n\n  useEffect(() => {\n    hlConflict();\n  }, [bd]);\n\n  // 3. highlight conflict when bd chagnes\n  useEffect(() => {\n    if (didIWin()) setWon(true);\n    // console.log(\"WON:\", won);\n    // every time bd changes, store bd, ac to localStorage\n    localStorage.setItem(\"bd\", JSON.stringify(bd));\n    localStorage.setItem(\"ac\", JSON.stringify(ac));\n  }, [bd, ac]);\n\n  return (\n    <div\n      className=\"Board\"\n      id=\"Board\"\n      onClick={(e) => {\n        // 👹👹👹 use as keyword to cast e.target to a more specific type!!!\n        const i = Number((e.target as HTMLDivElement).id.substr(1));\n        const v = bd[i].v;\n        setAc({ v, i });\n      }}\n    >\n      {bd.map((cell: CellType) => (\n        <Cell cell={cell} key={cell.i} />\n      ))}\n    </div>\n  );\n}\n","export default function validateSolution(board: number[][]): boolean {\n  //GOAL: test if all rows, columns, 9-cell blocks have the same elements as an array of 1-9\n  const NumArr1_9 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  //TODO: function that test if two array are equal in terms of having the element value, but NOT element order\n  let sameEls = (source: number[]) => (testArr: number[]) => {\n    if (testArr.length !== source.length) return false;\n    return testArr\n      .slice()\n      .sort()\n      .every((el: number, i: number) => el === source[i]);\n  };\n  let sameNumArr1_9 = sameEls(NumArr1_9);\n\n  //TODO: create columns board\n  let board_cols: number[][] = [];\n  board.forEach((row, i, arr) => {\n    let col: number[] = [];\n    row.forEach((_, j) => {\n      col.push(arr[j][i]);\n    });\n    board_cols.push(col);\n  });\n  //TODO: create grids board\n  let board_blocks = [];\n  // n is increment on i; m is increment on j\n  for (let n = 0; n < 3; n++) {\n    for (let m = 0; m < 3; m++) {\n      let block = [];\n      for (let i = n * 3; i < 3 + n * 3; i++) {\n        for (let j = m * 3; j < 3 + m * 3; j++) {\n          block.push(board[i][j]);\n        }\n      }\n      board_blocks.push(block);\n    }\n  }\n\n  //TODO: check all rows, columns, 9-cell blocks are valid separately\n  let validateAllRows = board.every((row) => sameNumArr1_9(row));\n  let validateAllCols = board_cols.every((row) => sameNumArr1_9(row));\n  let validateAllBlocks = board_blocks.every((row) => sameNumArr1_9(row));\n\n  //TODO: based on 3 individual tests, return if the board is valid\n  return [validateAllRows, validateAllCols, validateAllBlocks].every(\n    (test) => test,\n  );\n}\n","import { Puzzles, Difficulty } from \"./types\";\n\nexport const fetchPuzzles = async () => {\n  console.log(`fetching puzzles from ${process.env.API_URL}/puzzles`)\n  const response = await fetch(`${process.env.API_URL}/puzzles`);\n  if (response.ok) {\n    const puzzles: Puzzles = await response.json();\n    console.log(\"🌈 new puzzles fetched\", puzzles);\n    return puzzles;\n  } else {\n    alert(\"Error: fetching puzzles not successful\");\n  }\n};\n\nexport const storeFetchedPuzzles = (puzzles: Puzzles) => {\n  [\"easy\", \"medium\", \"hard\"].forEach((difficulty) => {\n    localStorage.setItem(\n      `puzzles-${difficulty}`,\n      JSON.stringify(puzzles.puzzles[difficulty as Difficulty]),\n    );\n  });\n};\n","import { useState } from \"react\";\nimport { BoardProps, Puzzle } from \"../lib/types\";\nimport { fetchPuzzles, storeFetchedPuzzles } from \"../lib/localStorage\";\nimport \"./GameController.css\";\nimport { setTokenSourceMapRange } from \"typescript\";\nimport makeBd from \"../lib/makeBd\";\n\nexport default function GameController({\n  setPuzzle,\n  setSolution,\n  bdDispatch,\n  setWon,\n}: BoardProps) {\n  const [difficulty, setDifficulty] = useState(\"easy\");\n\n  const startNewGame = () => {\n    console.log(difficulty);\n    let data;\n    // This is not the best solution as the wait time is arbitrarily set, but I don't know how to make this cb() wait for the if statement to execute and store all fetched data to localstorage first\n\n    console.log(\n      typeof localStorage.getItem(`puzzles-${difficulty}`),\n      localStorage.getItem(`puzzles-${difficulty}`),\n    );\n\n    if (\n      localStorage.getItem(`puzzles-${difficulty}`) === \"null\" ||\n      localStorage.getItem(`puzzles-${difficulty}`) === undefined\n    ) {\n      (async () => {\n        // if no more local storage puzzles, then fetch and store\n        const puzzles = await fetchPuzzles();\n        if (puzzles !== undefined) {\n          storeFetchedPuzzles(puzzles);\n          data = localStorage.getItem(`puzzles-${difficulty}`);\n        }\n      })();\n    }\n\n    setTimeout(() => {\n      data = localStorage.getItem(`puzzles-${difficulty}`);\n      let localPuzzles = JSON.parse(data as string);\n      console.log(\"Parsed Puzzles:\", localPuzzles);\n\n      const { puzzle: newPuzzle, solution: newSolution } =\n        localPuzzles.pop() as Puzzle;\n\n      console.log(newPuzzle, newSolution);\n\n      // 👹 use newPuzzle, newSolution to set the state of the game\n      localStorage.setItem(\"ac\", JSON.stringify(null));\n      localStorage.setItem(\"bd\", JSON.stringify(null));\n      setPuzzle(newPuzzle);\n      setSolution(newSolution);\n      bdDispatch({\n        type: \"START_NEW_GAME\",\n        payload: { bd: makeBd(newPuzzle) },\n      });\n      setWon(false);\n\n      // save the popped localPuzzles back to localStorage\n      if (localPuzzles.length === 0) {\n        localStorage.setItem(`puzzles-${difficulty}`, JSON.stringify(null));\n      } else {\n        localStorage.setItem(\n          `puzzles-${difficulty}`,\n          JSON.stringify(localPuzzles),\n        );\n      }\n      console.log(localStorage.getItem(`puzzles-${difficulty}`));\n    }, 500);\n  };\n\n  return (\n    <div className=\"GameController\">\n      <label htmlFor=\"difficulty-select\">\n        Difficulty:\n        <select\n          name=\"difficulty\"\n          id=\"difficulty-select\"\n          value={difficulty}\n          onChange={(e) => {\n            setDifficulty(e.target.value);\n          }}\n        >\n          <option value=\"easy\">Easy</option>\n          <option value=\"medium\">Medium</option>\n          <option value=\"hard\">Hard</option>\n        </select>\n      </label>\n      <div id=\"new-game\" onClick={startNewGame}>\n        New Game\n      </div>\n      {/* This one needs to use conflict <div>Show Mistakes</div> */}\n      <div className=\"time\">Time: </div>\n    </div>\n  );\n}\n","import \"./Button.css\";\n\nexport const Button = ({ id }: { id: number }) => {\n  return (\n    <div className=\"Button\" id={String(id)}>\n      {id}\n    </div>\n  );\n};\n","import { NumpadProps } from \"../lib/types\";\nimport { Button } from \"./Button\";\nimport \"./Numpad.css\";\n\nexport default function Numpad({\n  bd,\n  bdDispatch,\n  ac,\n  setAc,\n  keypress,\n  setKeypress,\n}: NumpadProps) {\n  return (\n    <div\n      className=\"Numpad\"\n      onClick={(e) => {\n        // the id is of the same value as the number button\n        const numVal = Number((e.target as HTMLDivElement).id);\n        console.log(\"Number button value:\", numVal, \"ac.v:\", ac.v);\n        bdDispatch({ type: \"SET_CELL_VALUE\", payload: { v: numVal } });\n      }}\n    >\n      {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((num) => (\n        <Button key={num} id={num} />\n      ))}\n    </div>\n  );\n}\n","import \"./Game.css\";\nimport { useReducer, useState } from \"react\";\nimport makeBd from \"../lib/makeBd\";\nimport { AC, actionType, BdType, CellType } from \"../lib/types\";\nimport Board from \"./Board\";\nimport BoardController from \"./BoardController\";\nimport GameController from \"./GameController\";\nimport Numpad from \"./Numpad\";\nimport { getSudokuIndices } from \"../util/util\";\n\nlet initPuzzle = [\n  3, 0, 9, 5, 1, 7, 0, 6, 0, 1, 2, 6, 8, 3, 0, 7, 5, 9, 0, 7, 5, 9, 0, 2, 3, 1,\n  4, 5, 0, 4, 7, 0, 6, 1, 0, 3, 6, 1, 3, 4, 9, 0, 5, 0, 7, 0, 8, 0, 0, 5, 1, 9,\n  4, 0, 0, 0, 1, 6, 7, 0, 0, 9, 0, 0, 6, 2, 0, 8, 9, 0, 0, 0, 9, 0, 0, 0, 0, 5,\n  6, 0, 1,\n];\nlet initSolution = [\n  3, 4, 9, 5, 1, 7, 8, 6, 2, 1, 2, 6, 8, 3, 4, 7, 5, 9, 8, 7, 5, 9, 6, 2, 3, 1,\n  4, 5, 9, 4, 7, 2, 6, 1, 8, 3, 6, 1, 3, 4, 9, 8, 5, 2, 7, 2, 8, 7, 3, 5, 1, 9,\n  4, 6, 4, 5, 1, 6, 7, 3, 2, 9, 8, 7, 6, 2, 1, 8, 9, 4, 3, 5, 9, 3, 8, 2, 4, 5,\n  6, 7, 1,\n];\n\nexport default function Game() {\n  const [puzzle, setPuzzle] = useState(initPuzzle);\n  const [solution, setSolution] = useState(initSolution);\n  const [ac, setAc] = useState<AC>(\n    JSON.parse(localStorage.getItem(\"ac\") as string) || { i: 0, v: 0 },\n  );\n  // keypress state is for solving the click ac and the user filled number disappear bug; delete this if no longer userful\n  const [keypress, setKeypress] = useState(false);\n  const [won, setWon] = useState(false);\n  const bdReducer = (bd: BdType, action: actionType) => {\n    switch (action.type) {\n      case \"SET_CELL_VALUE\":\n        let newBd1 = [...bd];\n        const i = ac.i;\n        const v = action.payload.v;\n        //console.log(i, v);\n\n        if (v !== undefined) {\n          newBd1[i] = { ...bd[i] };\n          // 1. Change cell value\n          if (bd[i].type === \"user\") {\n            // if cell is empty, fill new value;\n            if (bd[i].v !== v) {\n              newBd1[i].v = v;\n              // if new value is different than solution value, set error to true\n              if (v !== solution[i]) {\n                newBd1[i].error = true;\n              } else {\n                newBd1[i].error = false;\n              }\n            }\n            //if given the same value as filled value, empty the cell\n            else if (bd[i].v === v) {\n              newBd1[i].v = 0;\n              newBd1[i].error = false;\n            }\n          }\n          // 2. create non-zero sudoku arr (plus ac); loop through the array and decide conflict state for each cell based own it's own sudoku cell values\n          const nonZeroSudoku = getSudokuIndices(i).filter(\n            (idx) => newBd1[idx].v !== 0 || idx === i,\n          );\n          console.log(\"🌸nonZeroSudoku\", nonZeroSudoku);\n          const conflicts: [number, boolean][] = nonZeroSudoku.map((idx) => {\n            const sudoku = getSudokuIndices(idx);\n            const sameValueCells = sudoku.filter(\n              (idx2) => newBd1[idx2].v === newBd1[idx].v && newBd1[idx].v !== 0,\n            );\n            console.log(\"🌸sameValueCells\", sameValueCells);\n            return [idx, sameValueCells.length > 1];\n          });\n          console.log(\"🌸conlifcts\", conflicts);\n          conflicts.forEach(([idx, isConflict]) => {\n            if (isConflict) {\n              newBd1[idx].conflict = true;\n            } else {\n              newBd1[idx].conflict = false;\n            }\n          });\n        }\n        return newBd1;\n      case \"START_NEW_GAME\":\n        const newBd2 = action.payload.bd;\n        if (newBd2 !== undefined) return newBd2;\n        else return bd;\n      // case \"CLEAR_CELL_VALUE\":\n      //   return;\n      default:\n        throw new Error(\"Unhandled action type: \" + action.type);\n    }\n  };\n  const [bd, bdDispatch] = useReducer(\n    bdReducer,\n    JSON.parse(localStorage.getItem(\"bd\") as string) || makeBd(puzzle),\n  );\n\n  return (\n    <div className=\"Game\">\n      <GameController\n        bd={bd}\n        bdDispatch={bdDispatch}\n        ac={ac}\n        setAc={setAc}\n        keypress={keypress}\n        setKeypress={setKeypress}\n        won={won}\n        setWon={setWon}\n        puzzle={puzzle}\n        setPuzzle={setPuzzle}\n        solution={solution}\n        setSolution={setSolution}\n      />\n      <Board\n        bd={bd}\n        bdDispatch={bdDispatch}\n        ac={ac}\n        setAc={setAc}\n        keypress={keypress}\n        setKeypress={setKeypress}\n        won={won}\n        setWon={setWon}\n        puzzle={puzzle}\n        setPuzzle={setPuzzle}\n        solution={solution}\n        setSolution={setSolution}\n      />\n      {/* <BoardController /> */}\n      {won ? (\n        <div className=\"congrats\">\n          <p>🎊🥳🎉</p>\n          <p>You Won!</p>\n          <p>👏🍾🥂</p>\n        </div>\n      ) : (\n        <Numpad\n          bd={bd}\n          bdDispatch={bdDispatch}\n          ac={ac}\n          setAc={setAc}\n          keypress={keypress}\n          setKeypress={setKeypress}\n          won={won}\n          setWon={setWon}\n          puzzle={puzzle}\n          setPuzzle={setPuzzle}\n          solution={solution}\n          setSolution={setSolution}\n        />\n      )}\n    </div>\n  );\n}\n","export default function Tips() {\n  return (\n    <div className=\"tips\">\n      <h2>How to play</h2>\n      <p>\n        The goal of Sudoku is to fill each row, column, and 3x3 block with\n        numbers from 1 to 9; every number can only show up once in each row,\n        column, and 3x3 block. That's it! So simple!\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Footer } from \"./components/Footer\";\nimport Game from \"./components/Game\";\nimport Tips from \"./components/Tips\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Classical Sudoku</h1>\n      <Game />\n      <Tips />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}