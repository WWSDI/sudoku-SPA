{"version":3,"sources":["components/Footer.tsx","lib/makeBd.ts","components/Cell.tsx","util/util.ts","components/Board.tsx","util/sudokuValidator.ts","lib/localStorage.ts","components/GameController.tsx","components/Button.tsx","components/Numpad.tsx","components/Game.tsx","components/Tips.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Footer","className","target","rel","href","src","alt","height","viewBox","version","width","d","makeCell","v","i","type","error","conflict","makeBd","puzzle","map","Cell","cell","id","String","padStart","idxToij","idx","Math","floor","getSudokuIndices","j","blcIStart","blcJStart","sudoku","Array","from","length","_","filter","m","n","idToIndex","parseInt","substr","Board","bd","ac","bdDispatch","setAc","setWon","keypress","setKeypress","won","useState","setSudoku","hlAC","AC","document","querySelector","classList","add","didIWin","solution2D","solution1D","push","get2DSolutionFromBd","console","log","result","board","source","sameNumArr1_9","testArr","slice","sort","every","el","board_cols","forEach","row","arr","col","board_blocks","block","test","validateSolution","flashCompletedRange","range","blc","nothing","cellVal","querySelectorAll","setTimeout","remove","useEffect","allCells","getSudoku","ACVal","cellIdx","hlSameNum","localStorage","setItem","JSON","stringify","onClick","e","Number","fetchPuzzleSet","difficulty","fetch","process","response","ok","json","puzzleSet","alert","GameController","setPuzzle","setSolution","setDifficulty","startNewGame","solution","payload","htmlFor","name","value","onChange","Button","Numpad","numVal","num","initPuzzle","initSolution","Game","parse","getItem","useReducer","action","newBd1","undefined","nonZeroSudoku","conflicts","sameValueCells","idx2","isConflict","newBd2","Error","Tips","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0266bac8.chunk.js","sourcesContent":["export const Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p>\n        Developed by <strong>Shawn Su</strong>\n      </p>\n      <p>Launched on 4 Nov 2021</p>\n      <p>\n        Studying at {\"\"}\n        <a target=\"_blank\" rel='noreferrer' href=\"https://www.developers.ac.nz/\">Developers Institute</a>\n      </p>\n      <div className=\"logo-container\">\n        <a target=\"_blank\" rel='noreferrer' href=\"https://www.linkedin.com/in/shawn-su-78a654215/\">\n          <img src=\"https://content.linkedin.com/content/dam/me/business/en-us/amp/brand-site/v2/bg/LI-Bug.svg.original.svg\" alt=\"Linkedin logo\"/>\n        </a>\n        <a target=\"_blank\" rel='noreferrer' href=\"https://github.com/WWSDI\">\n          <svg\n            height=\"64\"\n            aria-hidden=\"true\"\n            viewBox=\"0 0 16 16\"\n            version=\"1.1\"\n            width=\"64\"\n            data-view-component=\"true\"\n            className=\"octicon octicon-mark-github v-align-middle\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\n            ></path>\n          </svg>\n        </a>\n      </div>\n    </div>\n  );\n};\n","import { CellType } from \"./types\";\n\nconst makeCell = (v: number, i: number): CellType => ({\n  v,\n  i,\n  type: v !== 0 ? \"auto\" : \"user\",\n  error: false,\n  conflict: false,\n});\nconst makeBd = (puzzle: number[]) => puzzle.map(makeCell);\n\nexport default makeBd;\n","import { CellType } from \"../lib/types\";\nimport \"./Cell.css\";\n\ninterface CellProps {\n  cell: CellType;\n}\n\n// interface DivProps {\n//   i?: number;\n// }\n\nexport default function Cell({ cell: { v, i, type, error } }: CellProps) {\n  return (\n    // <div className={v ? \"Cell\" : \"Cell empty-Cell\"} i={i}>\n    <div\n      className={type === \"auto\" ? \"Cell auto\" : \"Cell user\"}\n      id={\"C\" + String(i).padStart(2, \"0\")}\n    >\n      {v ? v : \"\"}\n    </div>\n  );\n}\n","import { CellType } from \"./../lib/types\";\nimport { BdType } from \"../lib/types\";\n\n// ⭐️ convert index to [i,j]\nexport const idxToij = (idx: number): [number, number] => [\n  Math.floor(idx / 9),\n  idx % 9,\n];\nexport const getSudoku = (idx: number) => {\n  // ❗️ This part can be optimised by using a lookup obj instead of calculating every time\n  const [i, j] = idxToij(idx);\n  const blcIStart = Math.floor(i / 3) * 3;\n  const blcJStart = Math.floor(j / 3) * 3;\n  const allCells = document.querySelectorAll(\".Cell\");\n  const sudoku = Array.from(allCells).filter((cell) => {\n    // console.log(\"CELL:\", cell);\n    const idx = idToIndex((cell as HTMLDivElement).id);\n    const [m, n] = idxToij(idx);\n\n    return (\n      m === i ||\n      n === j ||\n      (m >= blcIStart &&\n        m < blcIStart + 3 &&\n        n >= blcJStart &&\n        n < blcJStart + 3)\n    );\n  });\n  return sudoku;\n};\nexport const getSameRowIndices = (idx: number) => {\n  const [i, j] = idxToij(idx);\n  const sameRowIndices = Array.from({ length: 81 }, (_, i) => i).filter(\n    (idx) => {\n      // console.log(\"CELL:\", cell);\n      const [m, n] = idxToij(idx);\n\n      return m === i;\n    },\n  );\n  return sameRowIndices;\n};\nexport const getSameColIndices = (idx: number) => {\n  const [i, j] = idxToij(idx);\n  const sameColIndices = Array.from({ length: 81 }, (_, i) => i).filter(\n    (idx) => {\n      // console.log(\"CELL:\", cell);\n      const [m, n] = idxToij(idx);\n\n      return n === j;\n    },\n  );\n  return sameColIndices;\n};\n\nexport const getSudokuIndices = (idx: number) => {\n  // ❗️ This part can be optimised by using a lookup obj instead of calculating every time\n  const [i, j] = idxToij(idx);\n  const blcIStart = Math.floor(i / 3) * 3;\n  const blcJStart = Math.floor(j / 3) * 3;\n\n  const sudoku = Array.from({ length: 81 }, (_, i) => i).filter((idx) => {\n    // console.log(\"CELL:\", cell);\n    const [m, n] = idxToij(idx);\n\n    return (\n      m === i ||\n      n === j ||\n      (m >= blcIStart &&\n        m < blcIStart + 3 &&\n        n >= blcJStart &&\n        n < blcJStart + 3)\n    );\n  });\n  return sudoku;\n};\n\n// Formatting\nexport const indexToSelector = (index: number) =>\n  \"#C\" + String(index).padStart(2, \"0\");\n\nexport const idToIndex = (id: string) => parseInt(id.substr(1));\n\nexport const get2DSolutionFromBd = (bd: BdType) => {\n  const solution1D = bd.map((cell: CellType) => cell.v);\n  const solution2D: number[][] = Array.from({ length: 9 }, () => []);\n\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      solution2D[i].push(solution1D[i * 9 + j]);\n    }\n  }\n  return solution2D;\n};\n\n// export const getNodeListFromIdx = (idx: number) => {\n//   const allCellNodeList = document.querySelectorAll(\".Cell\");\n//   const sameRow =\n//   return nodeList;\n// };\nexport const isEmpty = (data: any) => {\n  if (data === undefined || data === null || data === \"null\") {\n    return true;\n  }\n  return false;\n};\n","import Cell from \"./Cell\";\nimport \"./Board.css\";\nimport { CellType, BoardProps } from \"../lib/types\";\nimport { useEffect, useState } from \"react\";\nimport {\n  get2DSolutionFromBd,\n  getSudoku,\n  idToIndex,\n  idxToij,\n  indexToSelector,\n} from \"../util/util\";\nimport validateSolution from \"../util/sudokuValidator\";\n\n// Highlighting\n\nexport default function Board({\n  bd,\n  bdDispatch,\n  ac,\n  setAc,\n  keypress,\n  setKeypress,\n  won,\n  setWon,\n  puzzle,\n}: BoardProps): JSX.Element {\n  const [sudoku, setSudoku] = useState<Element[]>([]);\n\n  // Remove highlight of sudoku, ac and same num\n  const remove3Hl = () => {\n    const allCells = document.querySelectorAll(\".Cell\");\n    allCells.forEach((cell) => {\n      cell.classList.remove(\"hl-sudoku\", \"hl-ac\", \"hl-same-num\");\n    });\n  };\n  const hlAC = (idx: number) => {\n    const AC = document.querySelector(indexToSelector(idx));\n    AC?.classList.add(\"hl-ac\");\n  };\n  const hlSameNum = (idx: number) => {\n    // Create same num array and sudoku array\n    // const AC = document.querySelector(indexToSelector(idx));\n    const ACVal = bd[idx].v;\n    const allCells = document.querySelectorAll(\".Cell\");\n    const sameNumCells: Element[] = Array.from(allCells).filter((cell) => {\n      // console.log(\"😱\", cell);\n      const cellIdx = idToIndex(cell.id);\n      const cellVal = bd[cellIdx].v;\n      return cellVal !== 0 && cellVal === ACVal;\n    });\n\n    sameNumCells.forEach((cell) => cell.classList.add(\"hl-same-num\"));\n  };\n  const hlSudoku = (idx: number) => {\n    sudoku.forEach((cell) => cell.classList.add(\"hl-sudoku\"));\n  };\n\n  const hlConflict = () => {\n    const allCells = document.querySelectorAll(\".Cell\");\n    allCells.forEach((cell) => {\n      if (bd[idToIndex(cell.id)].conflict) {\n        // highlight conflict cells\n        cell.classList.add(\"hl-conflict\");\n      } else {\n        // do NOT highlight non-conflict cells\n        cell.classList.remove(\"hl-conflict\");\n      }\n    });\n  };\n  const didIWin = () => {\n    // 1. check if all cells are filled\n    // 2. check if all cells' error property are false\n    // for (let cell of bd) {\n    //   if (cell.v === 0 || cell.error === true) return false;\n    // }\n    const solution2D = get2DSolutionFromBd(bd);\n    console.log(\"2D Solution:\", solution2D);\n    const result = validateSolution(solution2D);\n    console.log(\"Result:\", result);\n\n    return result;\n  };\n\n  const flashCompletedRange = (range: \"row\" | \"col\" | \"blc\" | \"board\") => {\n    // TODO:\n    // 1. change row, col and blc to wave propogation pattern\n\n    const row = (_: Element | number | boolean, idx: number) => {\n      const [i, j] = idxToij(idx);\n      const [m, n] = idxToij(ac.i);\n      return m === i;\n    };\n    const col = (_: Element | number | boolean, idx: number) => {\n      const [i, j] = idxToij(idx);\n      const [m, n] = idxToij(ac.i);\n      return n === j;\n    };\n    const blc = (_: Element | number | boolean, idx: number) => {\n      const [i, j] = idxToij(idx);\n      const [m, n] = idxToij(ac.i);\n      const blcIStart = Math.floor(i / 3) * 3;\n      const blcJStart = Math.floor(j / 3) * 3;\n      return (\n        m >= blcIStart &&\n        m < blcIStart + 3 &&\n        n >= blcJStart &&\n        n < blcJStart + 3\n      );\n    };\n    const nothing = (_: Element | number | boolean, idx: number) => {\n      return false;\n    };\n    const board = (_: Element | number | boolean, idx: number) => {\n      return true;\n    };\n\n    if (\n      // all cells are filled in such range\n      bd\n        .map((cell: CellType) => cell.v)\n        .filter(\n          range === \"row\"\n            ? row\n            : range === \"col\"\n            ? col\n            : range === \"blc\"\n            ? blc\n            : range === \"board\"\n            ? board\n            : nothing,\n        )\n        .every((cellVal) => cellVal !== 0) &&\n      // no conflict in such range\n      bd\n        .map((cell: CellType) => cell.conflict)\n        .filter(\n          range === \"row\"\n            ? row\n            : range === \"col\"\n            ? col\n            : range === \"blc\"\n            ? blc\n            : range === \"board\"\n            ? board\n            : nothing,\n        )\n        .every((conflict) => conflict === false)\n    ) {\n      Array.from(document.querySelectorAll(\".Cell\"))\n        .filter(\n          range === \"row\"\n            ? row\n            : range === \"col\"\n            ? col\n            : range === \"blc\"\n            ? blc\n            : range === \"board\"\n            ? board\n            : nothing,\n        )\n        .forEach((cell, i) => {\n          setTimeout(() => cell.classList.add(\"sudoku-complete\"), i * 30);\n          setTimeout(\n            () => cell.classList.remove(\"sudoku-complete\"),\n            (i + 12) * 30,\n          );\n        });\n    }\n  };\n\n  // 1. update sudoku\n  useEffect(() => {\n    setSudoku(getSudoku(ac.i));\n  }, [ac]);\n\n  // 2. highlight sudoku, ac, same num\n  useEffect(() => {\n    // remove highlight of sudoku, ac and same num\n    remove3Hl();\n    // add new highlight of sudoku, ac and same num\n    hlSudoku(ac.i);\n    hlSameNum(ac.i);\n    hlAC(ac.i);\n  }, [bd, sudoku]); // ignore the dependency warning\n\n  useEffect(() => {\n    hlConflict();\n    flashCompletedRange(\"col\");\n    flashCompletedRange(\"row\");\n    flashCompletedRange(\"blc\");\n  }, [bd]);\n\n  // 3. highlight conflict when bd chagnes\n  useEffect(() => {\n    if (didIWin()) setWon(true);\n    // console.log(\"WON:\", won);\n    // every time bd changes, store bd, ac to localStorage\n    localStorage.setItem(\"bd\", JSON.stringify(bd));\n    localStorage.setItem(\"ac\", JSON.stringify(ac));\n  }, [bd, ac]);\n\n  return (\n    <div\n      className=\"Board\"\n      id=\"Board\"\n      onClick={(e) => {\n        // 👹👹👹 use as keyword to cast e.target to a more specific type!!!\n        const i = Number((e.target as HTMLDivElement).id.substr(1));\n        const v = bd[i].v;\n        setAc({ v, i });\n      }}\n    >\n      {bd.map((cell: CellType) => (\n        <Cell cell={cell} key={cell.i} />\n      ))}\n    </div>\n  );\n}\n","export default function validateSolution(board: number[][]): boolean {\n  //GOAL: test if all rows, columns, 9-cell blocks have the same elements as an array of 1-9\n  const NumArr1_9 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  //TODO: function that test if two array are equal in terms of having the element value, but NOT element order\n  let sameEls = (source: number[]) => (testArr: number[]) => {\n    if (testArr.length !== source.length) return false;\n    return testArr\n      .slice()\n      .sort()\n      .every((el: number, i: number) => el === source[i]);\n  };\n  let sameNumArr1_9 = sameEls(NumArr1_9);\n\n  //TODO: create columns board\n  let board_cols: number[][] = [];\n  board.forEach((row, i, arr) => {\n    let col: number[] = [];\n    row.forEach((_, j) => {\n      col.push(arr[j][i]);\n    });\n    board_cols.push(col);\n  });\n  //TODO: create grids board\n  let board_blocks = [];\n  // n is increment on i; m is increment on j\n  for (let n = 0; n < 3; n++) {\n    for (let m = 0; m < 3; m++) {\n      let block = [];\n      for (let i = n * 3; i < 3 + n * 3; i++) {\n        for (let j = m * 3; j < 3 + m * 3; j++) {\n          block.push(board[i][j]);\n        }\n      }\n      board_blocks.push(block);\n    }\n  }\n\n  //TODO: check all rows, columns, 9-cell blocks are valid separately\n  let validateAllRows = board.every((row) => sameNumArr1_9(row));\n  let validateAllCols = board_cols.every((row) => sameNumArr1_9(row));\n  let validateAllBlocks = board_blocks.every((row) => sameNumArr1_9(row));\n\n  //TODO: based on 3 individual tests, return if the board is valid\n  return [validateAllRows, validateAllCols, validateAllBlocks].every(\n    (test) => test,\n  );\n}\n","import { Difficulty, PuzzleSet } from \"./types\";\n\nexport const fetchPuzzleSet = async (difficulty: string) => {\n  // console.log(`fetching puzzles from ${process.env.REACT_APP_API_URI}/puzzles`);\n  try {\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URI}/puzzles/${difficulty}`\n    );\n    // console.log(response.status);\n    if (response.ok) {\n      const puzzleSet: PuzzleSet = await response.json();\n      console.log(\"🌈 new puzzle set fetched successfully\", puzzleSet);\n      return puzzleSet;\n    } else {\n      alert(\"⚠️ Error: fetching puzzle set not successful\");\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const storeFetchedPuzzles = (puzzleSet: PuzzleSet) => {\n  localStorage.setItem(\n    `puzzles-${puzzleSet.difficulty}`,\n    JSON.stringify(puzzleSet.difficulty)\n  );\n};\n","import { useState } from \"react\";\nimport { BoardProps, PuzzleSet } from \"../lib/types\";\nimport { fetchPuzzleSet, storeFetchedPuzzles } from \"../lib/localStorage\";\nimport \"./GameController.css\";\nimport makeBd from \"../lib/makeBd\";\nimport { isEmpty } from \"../util/util\";\n\nexport default function GameController({\n  setPuzzle,\n  setSolution,\n  bdDispatch,\n  setWon,\n}: BoardProps) {\n  const [difficulty, setDifficulty] = useState(\"easy\");\n\n  const startNewGame = async () => {\n    const puzzleSet = await fetchPuzzleSet(difficulty);\n\n    if (puzzleSet) {\n      setPuzzle(puzzleSet.puzzle);\n      setSolution(puzzleSet.solution);\n      bdDispatch({\n        type: \"START_NEW_GAME\",\n        payload: { bd: makeBd(puzzleSet.puzzle) },\n      });\n      setWon(false);\n    }\n  };\n\n  return (\n    <div className=\"GameController\">\n      <label htmlFor=\"difficulty-select\">\n        Difficulty:\n        <select\n          name=\"difficulty\"\n          id=\"difficulty-select\"\n          value={difficulty}\n          onChange={(e) => {\n            setDifficulty(e.target.value);\n          }}\n        >\n          <option value=\"testing\">Test</option>\n          <option value=\"easy\">Easy</option>\n          <option value=\"medium\">Medium</option>\n          <option value=\"hard\">Hard</option>\n          <option value=\"hell\">Hell</option>\n        </select>\n      </label>\n      <div id=\"new-game\" onClick={startNewGame}>\n        New Game\n      </div>\n      {/* This one needs to use conflict <div>Show Mistakes</div> */}\n      {/* <div className=\"time\">Time: </div> */}\n    </div>\n  );\n}\n","import \"./Button.css\";\n\nexport const Button = ({ id }: { id: number }) => {\n  return (\n    <div className=\"Button\" id={String(id)}>\n      {id}\n    </div>\n  );\n};\n","import { NumpadProps } from \"../lib/types\";\nimport { Button } from \"./Button\";\nimport \"./Numpad.css\";\n\nexport default function Numpad({\n  bd,\n  bdDispatch,\n  ac,\n  setAc,\n  keypress,\n  setKeypress,\n}: NumpadProps) {\n  return (\n    <div\n      className=\"Numpad\"\n      onClick={(e) => {\n        // the id is of the same value as the number button\n        const numVal = Number((e.target as HTMLDivElement).id);\n        console.log(\"Number button value:\", numVal, \"ac.v:\", ac.v);\n        bdDispatch({ type: \"SET_CELL_VALUE\", payload: { v: numVal } });\n      }}\n    >\n      {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((num) => (\n        <Button key={num} id={num} />\n      ))}\n    </div>\n  );\n}\n","import \"./Game.css\";\nimport { useReducer, useState } from \"react\";\nimport makeBd from \"../lib/makeBd\";\nimport { AC, actionType, BdType, } from \"../lib/types\";\nimport Board from \"./Board\";\nimport BoardController from \"./BoardController\";\nimport GameController from \"./GameController\";\nimport Numpad from \"./Numpad\";\nimport { getSudokuIndices } from \"../util/util\";\n\nlet initPuzzle = [\n  3, 0, 9, 5, 1, 7, 0, 6, 0, 1, 2, 6, 8, 3, 0, 7, 5, 9, 0, 7, 5, 9, 0, 2, 3, 1,\n  4, 5, 0, 4, 7, 0, 6, 1, 0, 3, 6, 1, 3, 4, 9, 0, 5, 0, 7, 0, 8, 0, 0, 5, 1, 9,\n  4, 0, 0, 0, 1, 6, 7, 0, 0, 9, 0, 0, 6, 2, 0, 8, 9, 0, 0, 0, 9, 0, 0, 0, 0, 5,\n  6, 0, 1,\n];\nlet initSolution = [\n  3, 4, 9, 5, 1, 7, 8, 6, 2, 1, 2, 6, 8, 3, 4, 7, 5, 9, 8, 7, 5, 9, 6, 2, 3, 1,\n  4, 5, 9, 4, 7, 2, 6, 1, 8, 3, 6, 1, 3, 4, 9, 8, 5, 2, 7, 2, 8, 7, 3, 5, 1, 9,\n  4, 6, 4, 5, 1, 6, 7, 3, 2, 9, 8, 7, 6, 2, 1, 8, 9, 4, 3, 5, 9, 3, 8, 2, 4, 5,\n  6, 7, 1,\n];\n\nexport default function Game() {\n  const [puzzle, setPuzzle] = useState(initPuzzle);\n  const [solution, setSolution] = useState(initSolution);\n  const [ac, setAc] = useState<AC>(\n    JSON.parse(localStorage.getItem(\"ac\") as string) || { i: 0, v: 0 },\n  );\n  // keypress state is for solving the click ac and the user filled number disappear bug; delete this if no longer userful\n  const [keypress, setKeypress] = useState(false);\n  const [won, setWon] = useState(false);\n  const bdReducer = (bd: BdType, action: actionType) => {\n    switch (action.type) {\n      case \"SET_CELL_VALUE\":\n        let newBd1 = [...bd];\n        const i = ac.i;\n        const v = action.payload.v;\n        //console.log(i, v);\n\n        if (v !== undefined) {\n          newBd1[i] = { ...bd[i] };\n          // 1. Change cell value\n          if (bd[i].type === \"user\") {\n            // if cell is empty, fill new value;\n            if (bd[i].v !== v) {\n              newBd1[i].v = v;\n              // if new value is different than solution value, set error to true\n              if (v !== solution[i]) {\n                newBd1[i].error = true;\n              } else {\n                newBd1[i].error = false;\n              }\n            }\n            //if given the same value as filled value, empty the cell\n            else if (bd[i].v === v) {\n              newBd1[i].v = 0;\n              newBd1[i].error = false;\n            }\n          }\n          // 2. create non-zero sudoku arr (plus ac); loop through the array and decide conflict state for each cell based own it's own sudoku cell values\n          const nonZeroSudoku = getSudokuIndices(i).filter(\n            (idx) => newBd1[idx].v !== 0 || idx === i,\n          );\n          console.log(\"🌸nonZeroSudoku\", nonZeroSudoku);\n          const conflicts: [number, boolean][] = nonZeroSudoku.map((idx) => {\n            const sudoku = getSudokuIndices(idx);\n            const sameValueCells = sudoku.filter(\n              (idx2) => newBd1[idx2].v === newBd1[idx].v && newBd1[idx].v !== 0,\n            );\n            console.log(\"🌸sameValueCells\", sameValueCells);\n            return [idx, sameValueCells.length > 1];\n          });\n          console.log(\"🌸conlifcts\", conflicts);\n          conflicts.forEach(([idx, isConflict]) => {\n            if (isConflict) {\n              newBd1[idx].conflict = true;\n            } else {\n              newBd1[idx].conflict = false;\n            }\n          });\n        }\n        return newBd1;\n      case \"START_NEW_GAME\":\n        const newBd2 = action.payload.bd;\n        if (newBd2 !== undefined) return newBd2;\n        else return bd;\n      // case \"CLEAR_CELL_VALUE\":\n      //   return;\n      default:\n        throw new Error(\"Unhandled action type: \" + action.type);\n    }\n  };\n  const [bd, bdDispatch] = useReducer(\n    bdReducer,\n    JSON.parse(localStorage.getItem(\"bd\") as string) || makeBd(puzzle),\n  );\n\n  return (\n    <div className=\"Game\">\n      <GameController\n        bd={bd}\n        bdDispatch={bdDispatch}\n        ac={ac}\n        setAc={setAc}\n        keypress={keypress}\n        setKeypress={setKeypress}\n        won={won}\n        setWon={setWon}\n        puzzle={puzzle}\n        setPuzzle={setPuzzle}\n        solution={solution}\n        setSolution={setSolution}\n      />\n      <Board\n        bd={bd}\n        bdDispatch={bdDispatch}\n        ac={ac}\n        setAc={setAc}\n        keypress={keypress}\n        setKeypress={setKeypress}\n        won={won}\n        setWon={setWon}\n        puzzle={puzzle}\n        setPuzzle={setPuzzle}\n        solution={solution}\n        setSolution={setSolution}\n      />\n      {/* <BoardController /> */}\n      {won ? (\n        <div className=\"congrats\">\n          <p>🎊🥳🎉</p>\n          <p>You Won!</p>\n          <p>👏🍾🥂</p>\n        </div>\n      ) : (\n        <Numpad\n          bd={bd}\n          bdDispatch={bdDispatch}\n          ac={ac}\n          setAc={setAc}\n          keypress={keypress}\n          setKeypress={setKeypress}\n          won={won}\n          setWon={setWon}\n          puzzle={puzzle}\n          setPuzzle={setPuzzle}\n          solution={solution}\n          setSolution={setSolution}\n        />\n      )}\n    </div>\n  );\n}\n","export default function Tips() {\n  return (\n    <div className=\"tips\">\n      <h2>How to play</h2>\n      <p>\n        The goal of Sudoku is to fill each row, column, and 3x3 block with\n        numbers from 1 to 9; every number can only show up once in each row,\n        column, and 3x3 block. That's it! So simple!\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Footer } from \"./components/Footer\";\nimport Game from \"./components/Game\";\nimport Tips from \"./components/Tips\";\n// import dotenv from \"dotenv\";\n\n// dotenv.config();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Classical Sudoku</h1>\n      <Game />\n      <Tips />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}